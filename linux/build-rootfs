#!/bin/bash

#
# Copyright 2016, Data 61
# Commonwealth Scientific and Industrial Research Organisation (CSIRO)
# ABN 41 687 119 230.
#
# This software may be distributed and modified according to the terms of
# the GNU General Public License version 2. Note that NO WARRANTY is provided.
# See "LICENSE_GPLv2.txt" for details.
#
# @TAG(D61_GPL)
#

# Script to generate root filesystem cpio archive.
#
# It takes a bare rootfs generated by buildroot (rootfs-bare.cpio)
# and adds additional kernel modules, and a custom init script.
# The result is placed in rootfs.cpio, which the camkes vm build
# system adds to the vm image.
#
# Run after modifying the source of kernel modules.

set -e

LINUX_MD5="9e519daf194026fc1db05dd320e4a505"
LINUX_MAJOR="4"
LINUX_VERSION="$LINUX_MAJOR.8.0"
LINUX_DIR="linux-$LINUX_VERSION"
LINUX_ARCHIVE="$LINUX_DIR.tar.gz"
LINUX_URL="https://www.kernel.org/pub/linux/kernel/v$LINUX_MAJOR.x/$LINUX_ARCHIVE"

OUT=out
MODULES_DIR=modules
PKG_DIR=pkg
TEXT_DIR=text
INIT_TEMPLATE=camkes_init_template
INIT_DEST=/usr/local/bin/camkes_init
CONFIG_DIR=config
LINUX_CONFIG=linux_build_config
LINUX_SYMVERS=Module.symvers

# Script containing application-specific camkes init commands
CAMKES_INIT=camkes_app_init
CAMKES_CONF=camkes-init.conf

ROOTFS_SRC=rootfs-bare.cpio
ROOTFS_DEST=rootfs.cpio
ROOTFS_TMP=rootfs

STATIC_LIBRARY_OUT=static_lib
STATIC_LIBRARY_SRC=lib_src

LINUX_BZIMAGE=bzimage

if test ! -d $OUT; then
    rm -rf $OUT
    mkdir -p $OUT
fi

#if test ! -e "$OUT/$LINUX_ARCHIVE"; then
    #echo -e "\e[1;96mDownloading linux source...\e[0m"
    #wget -O "$OUT/$LINUX_ARCHIVE" $LINUX_URL
#fi

if test ! -d "$OUT/$LINUX_DIR"; then
    echo -e "\e[1;96mExtracting linux source...\e[0m"
    if ! echo "$LINUX_MD5 $OUT/$LINUX_ARCHIVE" | md5sum --check; then
        echo -e "\e[1;91mWarning: Unexpected checksum for $OUT/$LINUX_ARCHIVE\e[0m"
    fi
    tar -x -f "$OUT/$LINUX_ARCHIVE" -C $OUT
fi

echo -e "\e[1;96mCopying linux configs into linux source dir...\e[0m"
cp -v $CONFIG_DIR/$LINUX_CONFIG $OUT/$LINUX_DIR/.config
cp -v $CONFIG_DIR/$LINUX_SYMVERS $OUT/$LINUX_DIR

if test "$1" == "-k"; then
    echo -e "\e[1;96mCompiling linux...\e[0m"
    pushd $OUT/$LINUX_DIR
    make -j
    popd
    cp -v $OUT/$LINUX_DIR/arch/x86/boot/bzImage $LINUX_BZIMAGE
fi

echo -e "\e[1;96mPreparing linux source to build kernel modules...\e[0m"
pushd $OUT/$LINUX_DIR
make oldconfig
make prepare
make modules_prepare
popd

rm -rf $OUT/$ROOTFS_TMP
mkdir -p $OUT/$ROOTFS_TMP

echo -e "\e[1;96mExtracting default root filesystem to $OUT/$ROOTFS_TMP...\e[0m"
rm -rf $OUT/$ROOTFS_TMP
mkdir -p $OUT/$ROOTFS_TMP
ROOTFS_SRC_ABS=`pwd`/$ROOTFS_SRC
pushd $OUT/$ROOTFS_TMP
cat $ROOTFS_SRC_ABS | fakeroot cpio \
    --extract --make-directories \
    --no-preserve-owner --preserve-modification-time
popd

MODULE_PATH=`pwd`/$OUT/$ROOTFS_TMP/lib/modules/$LINUX_VERSION/kernel/drivers/vmm
mkdir -p $MODULE_PATH

KHEAD=`pwd`/$OUT/$LINUX_DIR

echo -e "\e[1;96mCompiling kernel modules...\e[0m"
for module in $MODULES_DIR/*; do
    pushd $module

    make KHEAD=$KHEAD
    cp -v *.ko $MODULE_PATH

    popd
done

echo -e "\e[1;96mAdding custom init script to root filesystem...\e[0m"
mkdir -pv `dirname $OUT/$ROOTFS_TMP$INIT_DEST`
cat $INIT_TEMPLATE | sed -re "s/__LINUX_VERSION__/$LINUX_VERSION/g" | tee $OUT/$ROOTFS_TMP$INIT_DEST
chmod a+x $OUT/$ROOTFS_TMP$INIT_DEST

echo -e "\e[1;96mAdding CAmkES init script to root filesystem...\e[0m"
cp -v $CAMKES_INIT $OUT/$ROOTFS_TMP/usr/local/bin/$CAMKES_INIT

echo -e "\e[1;96mAdding CAmkES boot configuration script...\e[0m"
mkdir -pv $OUT/$ROOTFS_TMP/etc/init
cp -v $CAMKES_CONF $OUT/$ROOTFS_TMP/etc/init/$CAMKES_CONF

echo -e "\e[1;96mBuilding static libraries...\e[0m"
STATIC_LIBRARY_PATH=`pwd`/$OUT/$STATIC_LIBRARY_OUT
mkdir -p $STATIC_LIBRARY_PATH
for lib in $STATIC_LIBRARY_SRC/*; do
    pushd $lib

    make
    make OUTPUT_DIR=$STATIC_LIBRARY_PATH install

    popd
done

echo -e "\e[1;96mAdding extra packages root filesystem...\e[0m"
SBIN_PATH=`pwd`/$OUT/$ROOTFS_TMP/usr/sbin
for pkg in $PKG_DIR/*; do
    pushd $pkg

    make
    find -executable -exec cp -v {} $SBIN_PATH \;
    make clean

    popd
done

echo -e "\e[1;96mCopying text files to root filesystem...\e[0m"
cp -rv $TEXT_DIR $OUT/$ROOTFS_TMP/opt

echo -e "\e[1;96mPacking final root filesystem in $ROOTFS_DEST...\e[0m"
ROOTFS_DEST_ABS=`pwd`/$ROOTFS_DEST
pushd $OUT/$ROOTFS_TMP
find . -print0 | fakeroot cpio --null -H newc -o > $ROOTFS_DEST_ABS
popd

echo -e "\e[1;96mModules added to root filesystem for linux $LINUX_VERSION!\e[0m"
